# .github/workflows/deploy.yml
name: Deploy

on:
  push:
    branches: [ master ]

concurrency:
  group: deploy-production
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Prepare askpass script
        run: |
          echo '#!/usr/bin/env bash' > "$GITHUB_WORKSPACE/askpass.sh"
          echo 'echo "$SSH_PASSPHRASE"' >> "$GITHUB_WORKSPACE/askpass.sh"
          chmod +x "$GITHUB_WORKSPACE/askpass.sh"

      - name: Add key to agent using SSH_ASKPASS
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_ASKPASS: $GITHUB_WORKSPACE/askpass.sh
          DISPLAY: :0
        run: |
          ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh-add -l

      - name: Run remote deploy commands over SSH
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          # Use askpass for ssh too, in case it re-prompts
          SSH_ASKPASS=$GITHUB_WORKSPACE/askpass.sh DISPLAY=:0 \
          ssh -o BatchMode=no -o IdentitiesOnly=yes -p "${{ secrets.SSH_PORT }}" \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" 'bash -lc "
              cd /var/www/cartoon-reorbit && \
              git pull origin master && \
              npx prisma migrate deploy && \
              npx prisma generate && \
              npm install && \
              npm run build && \
              pm2 restart 2 && \
              pm2 restart 5 && \
              pm2 restart 3 && \
              pm2 restart 6
            "'
